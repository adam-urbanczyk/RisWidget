# The MIT License (MIT)
#
# Copyright (c) 2014 WUSTL ZPLAB
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Authors: Erik Hvatum <ice.rikh@gmail.com>

include(SIPMacros)

if(NOT AS_PYTHON_MODULE)
    set(_RIS_WIDGET_GUI_DEFS ${_RIS_WIDGET_GUI_DEFS} "-DSTAND_ALONE_EXECUTABLE")
endif()

if(ENABLE_GL_DEBUG_LOGGING)
    set(_RIS_WIDGET_GUI_DEFS ${_RIS_WIDGET_GUI_DEFS} "-DENABLE_GL_DEBUG_LOGGING")
endif()

if(ENABLE_CL_PROFILING)
    set(_RIS_WIDGET_GUI_DEFS ${_RIS_WIDGET_GUI_DEFS} "-DENABLE_CL_PROFILING")
endif()

qt5_wrap_ui(UI_HEADERS HistogramWidget.ui
                       RisWidget.ui
                       ShowCheckerDialog.ui
                       ImageWidget.ui)

qt5_add_resources(UI_RESOURCES RisWidget.qrc)

set(SOURCES RisWidget.cpp
            GilStateScopeOperators.cpp
            GlslProg.cpp
            GlxFunctions.c
            HistoDrawProg.cpp
            HistogramWidget.cpp
            HistogramView.cpp
            ImageDrawProg.cpp
            ImageWidget.cpp
            ImageWidgetViewScroller.cpp
            ImageView.cpp
            Renderer.cpp
            RisWidgetException.cpp
            ShowCheckerDialog.cpp
            View.cpp
            ViewWidget.cpp
            ${UI_HEADERS}
            ${UI_RESOURCES})

set(LIBRARIES ${OPENGL_LIBRARIES}
              ${FREEIMAGEPLUS_LIBRARY}
              ${PYTHON_LIBRARY}
              ${OPENCL_LIBRARIES}
              Qt5::Core
              Qt5::Gui
              Qt5::OpenGL
              Qt5::Widgets)

if(AS_PYTHON_MODULE)
    add_library(ris_widget_gui STATIC ${SOURCES})
    set_target_properties(ris_widget_gui PROPERTIES COMPILE_OPTIONS "${_RIS_WIDGET_GUI_DEFS}")
    # Obviously the static lib, ris_widget_gui.a, as such is not going to be linked against any libraries.
    # target_link_libraries does more than set -llibs, however.  It also adds the #defines and other compiler
    # flags needed, including (vitally) -fPIC.  Going about this any other way causes CMake to officiously
    # add a -fPIE flag because this is a static lib and static libs are only ever linked to executables,
    # by CMake's logic.  But, THIS static lib is NOT being linked into an executable!  It is being linked
    # into a .so file, and that means we must have -fPIC.
    target_link_libraries(ris_widget_gui ${LIBRARIES})
    set(SIP_INCLUDES ${SIP_INCLUDES} ${PYQT5_SIP_DIR})
    set(SIP_EXTRA_OPTIONS ${SIP_EXTRA_OPTIONS} ${PYQT5_SIP_FLAGS} "-e")
    add_sip_python_module(_ris_widget ris_widget.sip ris_widget_gui ${LIBRARIES})

    function(echo_target_property tgt prop)

      # v for value, d for defined, s for set

      get_property(v TARGET ${tgt} PROPERTY ${prop})

      get_property(d TARGET ${tgt} PROPERTY ${prop} DEFINED)

      get_property(s TARGET ${tgt} PROPERTY ${prop} SET)

     

      # only produce output for values that are set

      if(s)

        message("tgt='${tgt}' prop='${prop}'")

        message("  value='${v}'")

        message("  defined='${d}'")

        message("  set='${s}'")

        message("")

      endif()

    endfunction()

     

    function(echo_target tgt)

      if(NOT TARGET ${tgt})

        message("There is no target named '${tgt}'")

        return()

      endif()

     

      set(props

    DEBUG_OUTPUT_NAME

    DEBUG_POSTFIX

    RELEASE_OUTPUT_NAME

    RELEASE_POSTFIX

    ARCHIVE_OUTPUT_DIRECTORY

    ARCHIVE_OUTPUT_DIRECTORY_DEBUG

    ARCHIVE_OUTPUT_DIRECTORY_RELEASE

    ARCHIVE_OUTPUT_NAME

    ARCHIVE_OUTPUT_NAME_DEBUG

    ARCHIVE_OUTPUT_NAME_RELEASE

    AUTOMOC

    AUTOMOC_MOC_OPTIONS

    BUILD_WITH_INSTALL_RPATH

    BUNDLE

    BUNDLE_EXTENSION

    COMPILE_DEFINITIONS

    COMPILE_DEFINITIONS_DEBUG

    COMPILE_DEFINITIONS_RELEASE

    COMPILE_FLAGS

    DEBUG_POSTFIX

    RELEASE_POSTFIX

    DEFINE_SYMBOL

    ENABLE_EXPORTS

    EXCLUDE_FROM_ALL

    EchoString

    FOLDER

    FRAMEWORK

    Fortran_FORMAT

    Fortran_MODULE_DIRECTORY

    GENERATOR_FILE_NAME

    GNUtoMS

    HAS_CXX

    IMPLICIT_DEPENDS_INCLUDE_TRANSFORM

    IMPORTED

    IMPORTED_CONFIGURATIONS

    IMPORTED_IMPLIB

    IMPORTED_IMPLIB_DEBUG

    IMPORTED_IMPLIB_RELEASE

    IMPORTED_LINK_DEPENDENT_LIBRARIES

    IMPORTED_LINK_DEPENDENT_LIBRARIES_DEBUG

    IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE

    IMPORTED_LINK_INTERFACE_LANGUAGES

    IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG

    IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE

    IMPORTED_LINK_INTERFACE_LIBRARIES

    IMPORTED_LINK_INTERFACE_LIBRARIES_DEBUG

    IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE

    IMPORTED_LINK_INTERFACE_MULTIPLICITY

    IMPORTED_LINK_INTERFACE_MULTIPLICITY_DEBUG

    IMPORTED_LINK_INTERFACE_MULTIPLICITY_RELEASE

    IMPORTED_LOCATION

    IMPORTED_LOCATION_DEBUG

    IMPORTED_LOCATION_RELEASE

    IMPORTED_NO_SONAME

    IMPORTED_NO_SONAME_DEBUG

    IMPORTED_NO_SONAME_RELEASE

    IMPORTED_SONAME

    IMPORTED_SONAME_DEBUG

    IMPORTED_SONAME_RELEASE

    IMPORT_PREFIX

    IMPORT_SUFFIX

    INCLUDE_DIRECTORIES

    INSTALL_NAME_DIR

    INSTALL_RPATH

    INSTALL_RPATH_USE_LINK_PATH

    INTERPROCEDURAL_OPTIMIZATION

    INTERPROCEDURAL_OPTIMIZATION_DEBUG

    INTERPROCEDURAL_OPTIMIZATION_RELEASE

    LABELS

    LIBRARY_OUTPUT_DIRECTORY

    LIBRARY_OUTPUT_DIRECTORY_DEBUG

    LIBRARY_OUTPUT_DIRECTORY_RELEASE

    LIBRARY_OUTPUT_NAME

    LIBRARY_OUTPUT_NAME_DEBUG

    LIBRARY_OUTPUT_NAME_RELEASE

    LINKER_LANGUAGE

    LINK_DEPENDS

    LINK_FLAGS

    LINK_FLAGS_DEBUG

    LINK_FLAGS_RELEASE

    LINK_INTERFACE_LIBRARIES

    LINK_INTERFACE_LIBRARIES_DEBUG

    LINK_INTERFACE_LIBRARIES_RELEASE

    LINK_INTERFACE_MULTIPLICITY

    LINK_INTERFACE_MULTIPLICITY_DEBUG

    LINK_INTERFACE_MULTIPLICITY_RELEASE

    LINK_SEARCH_END_STATIC

    LINK_SEARCH_START_STATIC

    LOCATION

    LOCATION_DEBUG

    LOCATION_RELEASE

    MACOSX_BUNDLE

    MACOSX_BUNDLE_INFO_PLIST

    MACOSX_FRAMEWORK_INFO_PLIST

    MAP_IMPORTED_CONFIG_DEBUG

    MAP_IMPORTED_CONFIG_RELEASE

    OSX_ARCHITECTURES

    OSX_ARCHITECTURES_DEBUG

    OSX_ARCHITECTURES_RELEASE

    OUTPUT_NAME

    OUTPUT_NAME_DEBUG

    OUTPUT_NAME_RELEASE

    POST_INSTALL_SCRIPT

    PREFIX

    PRE_INSTALL_SCRIPT

    PRIVATE_HEADER

    PROJECT_LABEL

    PUBLIC_HEADER

    RESOURCE

    RULE_LAUNCH_COMPILE

    RULE_LAUNCH_CUSTOM

    RULE_LAUNCH_LINK

    RUNTIME_OUTPUT_DIRECTORY

    RUNTIME_OUTPUT_DIRECTORY_DEBUG

    RUNTIME_OUTPUT_DIRECTORY_RELEASE

    RUNTIME_OUTPUT_NAME

    RUNTIME_OUTPUT_NAME_DEBUG

    RUNTIME_OUTPUT_NAME_RELEASE

    SKIP_BUILD_RPATH

    SOURCES

    SOVERSION

    STATIC_LIBRARY_FLAGS

    STATIC_LIBRARY_FLAGS_DEBUG

    STATIC_LIBRARY_FLAGS_RELEASE

    SUFFIX

    TYPE

    VERSION

    VS_DOTNET_REFERENCES

    VS_GLOBAL_WHATEVER

    VS_GLOBAL_KEYWORD

    VS_GLOBAL_PROJECT_TYPES

    VS_KEYWORD

    VS_SCC_AUXPATH

    VS_SCC_LOCALPATH

    VS_SCC_PROJECTNAME

    VS_SCC_PROVIDER

    VS_WINRT_EXTENSIONS

    VS_WINRT_REFERENCES

    WIN32_EXECUTABLE

    XCODE_ATTRIBUTE_WHATEVER

    )

     

      message("======================== ${tgt} ========================")

      foreach(p ${props})

        echo_target_property("${t}" "${p}")

      endforeach()

      message("")

    endfunction()

     

     

    function(echo_targets)

      set(tgts ${ARGV})

      foreach(t ${tgts})

        echo_target("${t}")

      endforeach()

    endfunction()

    echo_targets(python_module__ris_widget)
else()
    add_executable(ris_widget ${SOURCES})
    set_target_properties(ris_widget PROPERTIES COMPILE_OPTIONS "${_RIS_WIDGET_GUI_DEFS}")
    target_link_libraries(ris_widget ${LIBRARIES})
endif()
