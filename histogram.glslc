#version 430 core

// layout (binding = 0, offset = 0) uniform atomic_uint counter;
layout (binding = 0, r16ui) uniform readonly uimage2D image;
layout (binding = 1, r32ui) uniform coherent uimage2DArray histograms;
layout (location = 0) uniform float binCount = 256;

layout (local_size_x = 1, local_size_y = 1) in;

// vec3 v;
// float rand(vec2 n)
// {
// return 0.5 + 0.5 *
//   fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);
// }

void main()
{
//  ivec2 imagePos = ivec2(gl_GlobalInvocationID.xy);
    ivec2 imageSize = imageSize(image);
    for(int x=0, y; x < imageSize.x; ++x)
    {
        for(y = 0; y < imageSize.y; ++y)
        {
            float intensity = imageLoad(image, ivec2(x, y)).r;
            uint bin = uint(floor((intensity / 777f) * binCount));
            imageAtomicAdd(histograms, ivec3(gl_WorkGroupID.x, gl_WorkGroupID.y, bin), 1);
        }
    }
}
